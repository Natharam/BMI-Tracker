{"version":3,"sources":["components/BmiForm/BmiForm.jsx","components/Info/Info.jsx","components/Bar/Bar.jsx","components/App/App.jsx","index.js"],"names":["BmiForm","change","useState","weight","height","date","state","setState","handleChange","e","Date","toLocaleString","split","target","name","value","className","htmlFor","id","type","maxLength","placeholder","onChange","disabled","onClick","Info","bmi","deleteCard","data-test","Bar","labelData","bmiData","data","canvas","gradient","getContext","createLinearGradient","addColorStop","labels","datasets","label","backgroundColor","borderColor","pointRadius","pointHoverRadius","pointHoverBorderColor","pointHoverBorderWidth","options","responsive","scales","xAxes","scaleLabel","display","labelString","fontSize","fontColor","gridLines","color","ticks","yAxes","beginAtZero","tooltips","titleFontSize","bodyFontSize","uuidv1","require","App","JSON","parse","localStorage","getItem","setData","handleDelete","setItem","stringify","newState","filter","i","useEffect","map","obj","val","heightInM","toFixed","newVal","len","length","slice","info","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e2808a4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../App/App.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BmiForm = ({ change }) => {\r\n  const [state, setState] = useState({\r\n    weight: \"\",\r\n    height: \"\",\r\n    date: \"\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    const date = new Date().toLocaleString().split(\",\")[0];\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n      date\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    change(state);\r\n    setState({\r\n      weight: '',\r\n      height: '',\r\n      date: ''\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col m6 s12\">\r\n          <label htmlFor=\"weight\">Weight (in kg)</label>\r\n          <input\r\n            id=\"weight\"\r\n            name=\"weight\"\r\n            type=\"tel\"\r\n            maxLength=\"3\"\r\n            placeholder=\"50\"\r\n            value={state.weight}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col m6 s12\">\r\n          <label htmlFor=\"height\">Height (in cm)</label>\r\n          <input\r\n            id=\"height\"\r\n            name=\"height\"\r\n            type=\"tel\"\r\n            maxLength=\"3\"\r\n            placeholder=\"176\"\r\n            value={state.height}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"center\">\r\n        <button\r\n          id=\"bmi-btn\"\r\n          className=\"calculate-btn\"\r\n          type=\"button\"\r\n          disabled={state.weight === \"\" || state.height === \"\"}\r\n          onClick={handleSubmit}\r\n        >\r\n          Calculate BMI\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nBmiForm.propTypes = {\r\n  change: PropTypes.func.isRequired\r\n};\r\n\r\nexport default BmiForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Info = ({ weight, height, id, date, bmi, deleteCard }) => {\r\n  const handleDelete = e => {\r\n    deleteCard(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"col m6 s12\">\r\n      <div className=\"card\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\" data-test=\"bmi\">\r\n            BMI: {bmi}\r\n          </span>\r\n          <div className=\"card-data\">\r\n            <span data-test=\"weight\">Weight: {weight} kg</span>\r\n            <span data-test=\"height\">Height: {height} cm</span>\r\n            <span data-test=\"date\">Date: {date}</span>\r\n          </div>\r\n\r\n          <button className=\"delete-btn\" onClick={handleDelete}>\r\n            X\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nInfo.propTypes = {\r\n  weight: PropTypes.string,\r\n  height: PropTypes.string,\r\n  id: PropTypes.string,\r\n  date: PropTypes.string,\r\n  bmi: PropTypes.string,\r\n  deleteCard: PropTypes.func\r\n};\r\n\r\nexport default Info;\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Bar = ({ labelData, bmiData }) => {\r\n  const data = canvas => {\r\n    const ctx = canvas.getContext('2d');\r\n    const gradient = ctx.createLinearGradient(63, 81, 181, 700);\r\n    gradient.addColorStop(0, '#929dd9');\r\n    gradient.addColorStop(1, '#172b4d');\r\n\r\n    return {\r\n      labels: labelData,\r\n      datasets: [\r\n        {\r\n          label: 'BMI',\r\n          data: bmiData,\r\n          backgroundColor: gradient,\r\n          borderColor: '#3F51B5',\r\n          pointRadius: 6,\r\n          pointHoverRadius: 8,\r\n          pointHoverBorderColor: 'white',\r\n          pointHoverBorderWidth: 2\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'Date',\r\n            fontSize: 18,\r\n            fontColor: 'white'\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            color: 'white'\r\n          },\r\n          ticks: {\r\n            fontColor: 'white',\r\n            fontSize: 16\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'BMI',\r\n            fontSize: 18,\r\n            fontColor: 'white'\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            color: 'white'\r\n          },\r\n          ticks: {\r\n            fontColor: 'white',\r\n            fontSize: 16,\r\n            beginAtZero: true\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      titleFontSize: 13,\r\n      bodyFontSize: 13\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nBar.propTypes = {\r\n  labelData: PropTypes.array,\r\n  bmiData: PropTypes.array\r\n};\r\n\r\nexport default Bar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport BmiForm from '../BmiForm/BmiForm';\r\nimport Info from '../Info/Info';\r\nimport Bar from '../Bar/Bar';\r\nimport './App.css';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nconst uuidv1 = require('uuid/v4');\r\n\r\nconst App = () => {\r\n  let initialState = () => JSON.parse(localStorage.getItem('data')) || [];\r\n  const [state, setState] = useState(initialState);\r\n  const [data, setData] = useState({});\r\n\r\n  const handleChange = val => {\r\n    let heightInM = val.height / 100;\r\n    val.bmi = (val.weight / (heightInM * heightInM)).toFixed(2);\r\n    val.id = uuidv1();\r\n    let newVal = [...state, val];\r\n    let len = newVal.length;\r\n    if (len > 7) newVal = newVal.slice(1, len);\r\n    setState(newVal);\r\n  };\r\n\r\n  const handleDelete = id => {\r\n    localStorage.setItem('lastState', JSON.stringify(state));\r\n    let newState = state.filter(i => {\r\n      return i.id !== id;\r\n    });\r\n    setState(newState);\r\n  };\r\n  const handleUndo = () => {\r\n    setState(JSON.parse(localStorage.getItem('lastState')));\r\n  };\r\n  useEffect(() => {\r\n    localStorage.setItem('data', JSON.stringify(state));\r\n    const date = state.map(obj => obj.date);\r\n    const bmi = state.map(obj => obj.bmi);\r\n    let newData = { date, bmi };\r\n    setData(newData);\r\n  }, [state]);\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row center'>\r\n        <h1 className='white-text'> BMI Tracker </h1>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='col m12 s12'>\r\n          <BmiForm change={handleChange} />\r\n          <Bar labelData={data.date} bmiData={data.bmi} />\r\n          <div>\r\n            <div className='row center'>\r\n              <h4 className='white-text'>7 Day Data</h4>\r\n            </div>\r\n            <div className='data-container row'>\r\n              {state.length > 0 ? (\r\n                <>\r\n                  {state.map(info => (\r\n                    <Info\r\n                      key={info.id}\r\n                      id={info.id}\r\n                      weight={info.weight}\r\n                      height={info.height}\r\n                      date={info.date}\r\n                      bmi={info.bmi}\r\n                      deleteCard={handleDelete}\r\n                    />\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <div className='center white-text'>No log found</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {localStorage.getItem('lastState') !== null ? (\r\n            <div className='center'>\r\n              <button className='calculate-btn' onClick={handleUndo}>\r\n                Undo\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App/App.jsx\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}