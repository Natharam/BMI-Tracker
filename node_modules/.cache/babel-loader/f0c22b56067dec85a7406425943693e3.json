{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\natha\\\\Documents\\\\New folder\\\\BMI-Calculator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\natha\\\\Documents\\\\New folder\\\\BMI-Calculator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\natha\\\\Documents\\\\New folder\\\\BMI-Calculator\\\\src\\\\components\\\\BmiForm\\\\BmiForm.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport \"../App/App.css\";\nimport PropTypes from \"prop-types\";\n\nconst BmiForm = ({\n  change\n}) => {\n  const _useState = useState({\n    weight: \"\",\n    height: \"\",\n    date: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const handleChange = e => {\n    const date = new Date().toLocaleString().split(\",\")[0];\n    setState(_objectSpread({}, state, {\n      [e.target.name]: e.target.value,\n      date\n    }));\n  };\n\n  const handleSubmit = () => {\n    change(state);\n    setState({\n      weight: '',\n      height: '',\n      date: ''\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col m6 s12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"weight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Weight (in kg)\"), React.createElement(\"input\", {\n    id: \"weight\",\n    name: \"weight\",\n    type: \"tel\",\n    maxLength: \"3\",\n    placeholder: \"50\",\n    value: state.weight,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col m6 s12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"height\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Height (in cm)\"), React.createElement(\"input\", {\n    id: \"height\",\n    name: \"height\",\n    type: \"tel\",\n    maxLength: \"3\",\n    placeholder: \"176\",\n    value: state.height,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"bmi-btn\",\n    className: \"calculate-btn\",\n    type: \"button\",\n    disabled: state.weight === \"\" || state.height === \"\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Calculate BMI\")));\n};\n\nBmiForm.propTypes = {\n  change: PropTypes.func.isRequired\n};\nexport default BmiForm;","map":{"version":3,"sources":["C:\\Users\\natha\\Documents\\New folder\\BMI-Calculator\\src\\components\\BmiForm\\BmiForm.jsx"],"names":["React","useState","PropTypes","BmiForm","change","weight","height","date","state","setState","handleChange","e","Date","toLocaleString","split","target","name","value","handleSubmit","propTypes","func","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA,oBACJH,QAAQ,CAAC;AACjCI,IAAAA,MAAM,EAAE,EADyB;AAEjCC,IAAAA,MAAM,EAAE,EAFyB;AAGjCC,IAAAA,IAAI,EAAE;AAH2B,GAAD,CADJ;AAAA;AAAA,QACvBC,KADuB;AAAA,QAChBC,QADgB;;AAO9B,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAMJ,IAAI,GAAG,IAAIK,IAAJ,GAAWC,cAAX,GAA4BC,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,CAAb;AACAL,IAAAA,QAAQ,mBACHD,KADG;AAEN,OAACG,CAAC,CAACI,MAAF,CAASC,IAAV,GAAiBL,CAAC,CAACI,MAAF,CAASE,KAFpB;AAGNV,MAAAA;AAHM,OAAR;AAKD,GAPD;;AASA,QAAMW,YAAY,GAAG,MAAM;AACzBd,IAAAA,MAAM,CAACI,KAAD,CAAN;AACAC,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,MAAM,EAAE,EADD;AAEPC,MAAAA,MAAM,EAAE,EAFD;AAGPC,MAAAA,IAAI,EAAE;AAHC,KAAD,CAAR;AAKD,GAPD;;AASA,SACE,0CACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,IAAI,EAAC,KAHP;AAIE,IAAA,SAAS,EAAC,GAJZ;AAKE,IAAA,WAAW,EAAC,IALd;AAME,IAAA,KAAK,EAAEC,KAAK,CAACH,MANf;AAOE,IAAA,QAAQ,EAAEK,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAcE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,IAAI,EAAC,KAHP;AAIE,IAAA,SAAS,EAAC,GAJZ;AAKE,IAAA,WAAW,EAAC,KALd;AAME,IAAA,KAAK,EAAEF,KAAK,CAACF,MANf;AAOE,IAAA,QAAQ,EAAEI,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAdF,CADF,EA4BE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,SAAS,EAAC,eAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,QAAQ,EAAEF,KAAK,CAACH,MAAN,KAAiB,EAAjB,IAAuBG,KAAK,CAACF,MAAN,KAAiB,EAJpD;AAKE,IAAA,OAAO,EAAEY,YALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CA5BF,CADF;AA0CD,CAnED;;AAqEAf,OAAO,CAACgB,SAAR,GAAoB;AAClBf,EAAAA,MAAM,EAAEF,SAAS,CAACkB,IAAV,CAAeC;AADL,CAApB;AAIA,eAAelB,OAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../App/App.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BmiForm = ({ change }) => {\r\n  const [state, setState] = useState({\r\n    weight: \"\",\r\n    height: \"\",\r\n    date: \"\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    const date = new Date().toLocaleString().split(\",\")[0];\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n      date\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    change(state);\r\n    setState({\r\n      weight: '',\r\n      height: '',\r\n      date: ''\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col m6 s12\">\r\n          <label htmlFor=\"weight\">Weight (in kg)</label>\r\n          <input\r\n            id=\"weight\"\r\n            name=\"weight\"\r\n            type=\"tel\"\r\n            maxLength=\"3\"\r\n            placeholder=\"50\"\r\n            value={state.weight}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col m6 s12\">\r\n          <label htmlFor=\"height\">Height (in cm)</label>\r\n          <input\r\n            id=\"height\"\r\n            name=\"height\"\r\n            type=\"tel\"\r\n            maxLength=\"3\"\r\n            placeholder=\"176\"\r\n            value={state.height}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"center\">\r\n        <button\r\n          id=\"bmi-btn\"\r\n          className=\"calculate-btn\"\r\n          type=\"button\"\r\n          disabled={state.weight === \"\" || state.height === \"\"}\r\n          onClick={handleSubmit}\r\n        >\r\n          Calculate BMI\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nBmiForm.propTypes = {\r\n  change: PropTypes.func.isRequired\r\n};\r\n\r\nexport default BmiForm;\r\n"]},"metadata":{},"sourceType":"module"}